#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<Windows.h> // 引入Windows.h以使用高精度计时器

#define MaxLength 10000 

void BubbleSort(int data[], int n);

int main()
{
    int i, j, data2[10];
    int data[MaxLength];
    LARGE_INTEGER frequency; // 用于存储计时器的频率
    LARGE_INTEGER start, end; // 用于存储计时器的开始和结束时间
    double elapsedTime; // 用于存储排序所用的时间

    srand((unsigned int)time(NULL));
    for(i = 0; i < MaxLength; i++)
    {
        data[i] = rand(); 
        //printf("%d ", data[i]); 	
    }
    printf("\n");

    // 获取计时器频率
    QueryPerformanceFrequency(&frequency);

    // 开始计时
    QueryPerformanceCounter(&start);

    // 执行冒泡排序
    BubbleSort(data, MaxLength);

    // 结束计时
    QueryPerformanceCounter(&end);

    // 计算排序所用的时间
    elapsedTime = (double)(end.QuadPart - start.QuadPart) / frequency.QuadPart;
    printf("BubbleSort Time: %lf 秒\n", elapsedTime);

    return 0;
}

void BubbleSort(int data[], int n)
{
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = 0; j < n - i - 1; j++)
        {
            if (data[j] > data[j + 1]) // 相邻元素两两对比
            {
                // 元素交换
                int temp = data[j + 1];
                data[j + 1] = data[j];
                data[j] = temp;
            }
        }
        //printf("第%d次排序结果：", i + 1);
        //for(int k = 0; k < n; k++) 
            //printf("%6d", data[k]);	
        //printf("\n");
    }
}
