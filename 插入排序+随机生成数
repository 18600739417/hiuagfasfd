#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<Windows.h> // 引入Windows.h以使用高精度计时器

#define MaxLength 10

void insertSort(int data[], int n);
void InputData(int &flag, int a[]);

int main()
{
    int flag = 0, i;
    int data[MaxLength];
    InputData(flag, data);
    //printf("排序前数据：");
    for (i = 0; i < flag; i++)
    {
        //printf("%6d", data[i]);
    }
    //printf("\n");

    LARGE_INTEGER frequency; // 用于存储计时器的频率
    LARGE_INTEGER start, end; // 用于存储计时器的开始和结束时间
    double elapsedTime; // 用于存储排序所用的时间

    // 获取计时器频率
    QueryPerformanceFrequency(&frequency);

    // 开始计时
    QueryPerformanceCounter(&start);

    // 执行插入排序
    insertSort(data, flag);

    // 结束计时
    QueryPerformanceCounter(&end);

    // 计算排序所用的时间
    elapsedTime = (double)(end.QuadPart - start.QuadPart) / frequency.QuadPart;
    printf("InsertSort Time: %lf 秒\n", elapsedTime);

    return 0;
}

void insertSort(int data[], int n)
{
    for (int i = 1; i < n; ++i) {
        for (int j = i; j > 0; j--) {
            if (data[j] < data[j - 1]) {
                int temp = data[j];
                data[j] = data[j - 1];
                data[j - 1] = temp;
            } else {
                break;
            }
        }
        //printf("第%d次排序结果：", i);
        //for (int k = 0; k < n; k++)
            //printf("%6d", data[k]);
        //printf("\n");
    }
}

void InputData(int &flag, int a[])
{
    srand((unsigned int)time(NULL)); // 设置随机数种子
    flag = MaxLength; // 设置数组长度
    for (int i = 0; i < flag; i++) {
        a[i] = rand(); // 生成随机数
    }
}
